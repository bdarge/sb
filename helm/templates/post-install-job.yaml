apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sb.serviceAccountName" . }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      initContainers:
        - name: wait-for-mysql
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz ${SVC_NAME} 3308; do echo "Waiting for mysql db..."; sleep 3; done;']
          env:
            - name: SVC_NAME
              value: {{ include "sb.fullname" . }}-db-svc
      containers:
        - name: post-install-job
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/bash"]
          args:
            - "-c"
            - >-
              git clone --single-branch --branch {{ .Values.migration.branch }} {{ .Values.migration.repoUrl }} &&
                /app/api
          env:
            - name: ENV
              value: "prod"
            - name: MIGRATOR
              value: "true"
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "sb-git-token"
                  key: token
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "sb-db"
                  key: password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "sb-db"
                  key: username
            - name: DSN
              value: "$(DB_USERNAME):$(DB_PASSWORD)@tcp({{ include "sb.fullname" . }}-db-svc:{{ .Values.db.service.port }})/{{ .Values.db.db_name }}?parseTime=true"
          volumeMounts:
            - name: config
              mountPath: "/app/envs"
      restartPolicy: {{ .Values.migration.job.restartPolicy }}
      volumes:
        - name: config
          configMap:
            name: {{ include "sb.fullname" . }}-post-install-config
            items:
            - key: "prod.env"
              path: "prod.env"
      dnsConfig:
        options:
          - name: ndots
            value: {{ .Values.dnsConfig.ndots | quote }}
