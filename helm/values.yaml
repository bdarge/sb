nameOverride: ""
fullnameOverride: ""
rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "sb"

app:
  email: ""
  domain: 
    - sb.odainfo.com

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
    - host: sb.odainfo.com
  tls:
    - secretName: sb-ca-tsl
      hosts:
        - sb.odainfo.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

dnsPolicy: "ClusterFirst"

# need to set number of dots value (ndots) b/c dns is not working
# https://pracucci.com/kubernetes-dns-resolution-ndots-options-and-why-it-may-affect-application-performances.html
# https://github.com/k3s-io/k3s/issues/2801
dnsConfig:
  ndots: 1

db:
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  replicaCount: 1
  image:
    repository: mysql
    pullPolicy: IfNotPresent
    tag: "9.2.0-oracle"
  service:
    type: LoadBalancer
    port: 3308
    targetPort: 3306
  db_name: "profile"
  nfs:
    nfsProvisioner: nfs2.csi.k8s.io
    volumeHandlePrefix: sb-node7.lan.odainfo.com
    server: node7.lan.odainfo.com
    share: /mnt/k8s-db-data/nfs4

api:
  autoscaling:
    enabled: false
  securityContext: {}
  replicaCount: 1
  service:
    type: ClusterIP
    port: 50052
    targetPort: 50052
  key: "exp"
  image:
    repository: "ghcr.io/bdarge/sb-api"
    pullPolicy: IfNotPresent
    tag: 0.0.1-alpha.4

auth:
  autoscaling:
    enabled: false
  securityContext: {}
  replicaCount: 1
  service:
    type: ClusterIP
    port: 50051
    targetPort: 50051
  key: "exp"
  image:
    repository: "ghcr.io/bdarge/sb-auth"
    pullPolicy: Always
    tag: 0.0.1-alpha.7

apiGateway:
  autoscaling:
    enabled: false
  securityContext: {}
  replicaCount: 1
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  baseUrl: "http://sb.lan/api/v1"
  key: "exp"
  image:
    repository: "ghcr.io/bdarge/sb-api-gateway"
    pullPolicy: Always
    tag: 0.0.1-alpha.3

ui:
  replicaCount: 1
  autoscaling:
    enabled: false
  image:
    repository: "ghcr.io/bdarge/sb-ui"
    pullPolicy: Always
    tag: 0.0.2-alpha.3
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

currency:
  replicaCount: 1
  autoscaling:
    enabled: false
  image:
    repository: "ghcr.io/bdarge/sb-currency"
    pullPolicy: Always
    tag: 0.0.1
  service:
    type: ClusterIP
    port: 9002
    targetPort: 9002

migration:
  job:
    restartPolicy: Never
  path: "db"
  repoUrl: "https://github.com/bdarge/sb-api.git"
  branch: main
  migrationPath: "sb-api/db/migrations"

postAction:
  image:
    name: alpine
    pullPolicy: IfNotPresent
    tag: "latest"

git:
  username: bdarge

imagePullSecrets: 
  - name: ghcr

